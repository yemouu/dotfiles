# WARNING: Changing your CHOST is not something that should be done lightly.
# Please consult https://wiki.gentoo.org/wiki/Changing_the_CHOST_variable before changing.
CHOST="x86_64-gentoo-linux-musl"

# this is only necessary if you intend to use clang as your default compiler
# for portage
CC="clang"
CPP="clang-cpp"
CXX="clang++"
LD="ld.lld"
AR="llvm-ar"
NM="llvm-nm"
RANLIB="llvm-ranlib"
STRINGS="llvm-strings"

# -march=native: set optimizations for your specific cpu. change this if you plan on
#	cross compiling or using the compiled binaries on another computer.
# -O3: sets the optimization level. -O2 is the default and considered safe but i've
#	personally not run into any issues with -O3
# -flto=thin: use ThinLTO. this option is not available for gcc, instead you would
#	just use -flto (not revommended)
# -pipe: use pipes instead of temporary files. on slow disk, this could help alot
# -falign-functions=32: Clear Linux uses this flag, Intel cpus apparently perform
#	better with this option
COMMON_FLAGS="-march=native -O3 -flto=thin -pipe -falign-functions=32"
CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
FCFLAGS="${COMMON_FLAGS}"
FFLAGS="${COMMON_FLAGS}"

# same as above but for golang
CGO_CFLAGS="${COMMON_FLAGS}"
CGO_CXXFLAGS="${COMMON_FLAGS}"
CGO_FFLAGS="${COMMON_FLAGS}"
CGO_LDFLAGS="${LDFLAGS}"

# you can get the CPU_FLAGS_X86 for your system by installing and running
# app-portage/cpuid2cpuflags
CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt sse sse2 sse3 sse4_1 sse4_2 ssse3"
# the amount of threads to compile with. generally set to the amount of threads
# your cpu has
MAKEOPTS="-j4"

# options changing portage functionality
CLEAN_DELAY=3
# --ask-enter-invalid: require `y` or `n` when using -a instead of allowing `enter`
# --fail-clean: when a package fails clean up temporary files
# --keep-going: if a package fails to compile continue as much as possible
# --quiet-build: just show the packages currently being built and how many are left
# -v: verbose
EMERGE_DEFAULT_OPTS="--ask-enter-invalid --fail-clean --keep-going --quiet-build -v"
# help prevent compiling from allowing you to do other task on your computer
PORTAGE_IONICE_COMMAND="ionice -c 3 -p \${PID}"
PORTAGE_NICENESS=5

CCACHE_BASEDIR="${PORTAGE_TMPDIR}/portage"
CCACHE_DIR="/var/cache/ccache"
CCACHE_SIZE="4Gi"
# get more hits with ccache
CCACHE_SLOPPINESS="file_stat_matches,include_file_ctime,include_file_mtime,locale,pch_defines,time_macros"
# enable ccache
FEATURES="ccache"

# Use `testing` packages instead of what is marked as stable
ACCEPT_KEYWORDS="~amd64"

USE="alsa dbus elogind jack lto pulseaudio seatd udev vaapi vulkan wayland"
INPUT_DEVICES="libinput wacom"
L10N="en-US"
# grab microcode for currently detected cpu (sys-firmware/intel-microcode)
MICROCODE_SIGNATURES="-S"
# enable support for gpus
VIDEO_CARDS="amdgpu i965 intel iris radeonsi"

DISTDIR="/var/cache/distfiles"
PKGDIR="/var/cache/binpkgs"
PORTDIR="/var/db/repos/gentoo"
PORTAGE_LOGDIR="/var/log/portage"

LC_MESSAGES=C
