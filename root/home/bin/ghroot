#!/bin/sh
# Mount what is needed for a chroot
#
# This script assumes that a gentoo system is being setup for a chroot and will mount repositories
# to the chroot.

usage() {
	printf '%b\n' "usage: ${0##*/} command chroot_directory" \
	              "Commads:" \
	              "  mount \t setup the chroot" \
	              "  umount\t unmount the chroot"
}

info() {
	printf '%b\n' "${0##*/}: $1" 1>&2
}

ghroot_check(){
	# Return 0 if we haven't already setup the chroot
	touch /tmp/ghroot
	grep -q "$1" /tmp/ghroot && return 1 || return 0
}

ghroot_mount() {
	# create a bind mount at the root of the chroot
	mount -B "$1" "$1"

	# Mount what is necessary for the chroot
	mount -t proc /proc "$1/proc" || { info "failed to mount /proc to $1/proc"; exit 1;}
	mount -R /sys "$1/sys" || { info "failed to mount /sys to $1/sys"; exit 1;}
	mount -R /dev "$1/dev" || { info "failed to mount /dev to $1/dev"; exit 1;}

	# These are some extra stuff we can mount to get things like audio to work from the chroot
	mount -R /run "$1/run" || { info "failed to mount /run to $1/run"; exit 1;}
	mount -R /tmp "$1/tmp" || { info "failed to mount /tmp to $1/tmp"; exit 1;}

	# Mount any home directories
	for home in /home/*
	do
		mkdir -p "$1/$home"
		mount -R "$home" "$1/$home" || { info "failed to mount $home to $1/$home"; exit 1;}
	done

	# Prevent duplication of repositories
	for repo in /var/db/repos/*
	do
		mkdir -p "$1/$repo"
		mount -R "$repo" "$1/$repo" || { info "failed to mount $repo to $1/$repo"; exit 1;}
	done
	mount -R /var/cache/distfiles "$1/var/cache/distfiles" \
		|| { info "failed to mount /var/cache/distfiles to $1/var/cache/distfiles"; exit 1;}

	# Mount any drives from /etc/fstab
	while read -r line
	do
		case $line in
			*$1* ) ;;
			*    ) continue ;;
		esac
		line="${line#* }"
		line="${line%% *}"
		mount "$line"
	done < /etc/fstab

	printf '%s\n' "$1" >> /tmp/ghroot
}

ghroot_umount() {
	# Unmount everything
	umount -R "$1/proc" || { info "failed to unmount $1/proc"; }
	umount -R "$1/sys" || { info "failed to unmount $1/sys"; }
	umount -R "$1/dev" || { info "failed to unmount $1/dev"; }

	umount -R "$1/run" || { info "failed to unmount $1/run"; }
	umount -R "$1/tmp" || { info "failed to unmount $1/tmp"; }

	for home in /home/*
	do
		umount -R "$1/$home" || { info "failed to unmount $1/$home"; }
	done

	for repo in /var/db/repos/*
	do
		umount -R "$1/$repo" || { info "failed to unmount $1/$repo"; }
	done

	umount -R "$1/var/cache/distfiles" || { info "failed to unmount $1/var/cache/distfiles"; exit 1;}

	while read -r line
	do
		case $line in
			*$1* ) ;;
			*    ) continue ;;
		esac
		line="${line#* }"
		line="${line%% *}"
		umount -R "$line"
	done < /etc/fstab

	umount -R "$1"

	# Deletes the line number the chroot is on
	sed "$(grep -n "$1" /tmp/ghroot | sed 's/:.*/d;/' | tr -d '\n' | sed 's/;$//')" /tmp/ghroot > /tmp/ghrootn
	mv /tmp/ghrootn /tmp/ghroot
}

[ "$2" ] || { info "2 arguments required"; usage; exit 1; }
[ -d "$2" ] || { info "$2: directory does not exist"; exit 1; }
[ "$2" = "/" ] && { info "$2: refusing to chroot over /"; exit 1; }

case $1 in
	mount|m ) ghroot_check "${2%/}" && ghroot_mount "${2%/}" ;;
	umount|u ) ghroot_check "${2%/}" || ghroot_umount "${2%/}" ;;
esac
