diff --git a/meson.build b/meson.build
index d98f708d..ccd10a54 100644
--- a/meson.build
+++ b/meson.build
@@ -51,8 +51,18 @@ libinotify       = dependency('libinotify', required: needs_libinotify)
 jpeg = dependency('libjpeg', required: false)
 png  = dependency('libpng',  required: false)
 
-# backtrace() is in a separate library on FreeBSD and Linux with musl
-backtrace = meson.get_compiler('cpp').find_library('execinfo', required: false)
+# Determine what we will use for backtraces. execinfo is preferred but
+# libunwind/llvm-libunwind can also be used.
+if meson.get_compiler('cpp').check_header('execinfo.h')
+  add_project_arguments('-DHAVE_EXECINFO', language: 'cpp')
+  # backtrace() is in a separate library on FreeBSD and Linux with musl
+  backtrace = meson.get_compiler('cpp').find_library('execinfo', required: false)
+else
+  backtrace = meson.get_compiler('cpp').find_library('unwind', required: false)
+  if backtrace.found()
+    add_project_arguments('-DHAVE_LIBUNWIND', language: 'cpp')
+  endif
+endif
 
 conf_data = configuration_data()
 
diff --git a/src/debug-func.hpp b/src/debug-func.hpp
index a4ff962d..15424540 100644
--- a/src/debug-func.hpp
+++ b/src/debug-func.hpp
@@ -2,7 +2,20 @@
 #include <wayfire/debug.hpp>
 #include <sstream>
 #include <iomanip>
+
+/**
+ * Some Linux distros, such as Gentoo, don't provide libexecinfo for musl
+ * causing this include to fail. Instead of not having any backtrace, replace
+ * execinfo.h with libunwind.h.
+ */
+
+#ifdef HAVE_EXECINFO
 #include <execinfo.h>
+#elif HAVE_LIBUNWIND
+#define UNW_LOCAL_ONLY
+#include <libunwind.h>
+#endif
+
 #include <cxxabi.h>
 #include <cstdio>
 #include <dlfcn.h>
@@ -212,6 +225,7 @@ addr2line_result locate_source_file(const demangling_result& dr)
 
 void wf::print_trace(bool fast_mode)
 {
+    #ifdef HAVE_EXECINFO
     void *addrlist[MAX_FRAMES];
     int addrlen = backtrace(addrlist, MAX_FRAMES);
     if (addrlen == 0)
@@ -252,6 +266,34 @@ void wf::print_trace(bool fast_mode)
     }
 
     free(symbollist);
+    #elif HAVE_LIBUNWIND
+    unw_context_t context;
+    unw_cursor_t cursor;
+    unw_word_t ip, sp, offset;
+
+    unw_getcontext(&context);
+    unw_init_local(&cursor, &context);
+    while (unw_step(&cursor) > 0)
+    {
+        unw_get_reg(&cursor, UNW_REG_IP, &ip);
+        unw_get_reg(&cursor, UNW_REG_SP, &sp);
+        printf("ip = %lx, sp = %lx: ", (long) ip, (long) sp);
+
+        char symbol[MAX_FUNCTION_NAME];
+        if (unw_get_proc_name(&cursor, symbol, sizeof(symbol), &offset) == 0) {
+            printf("(%s+0x%lx)", symbol, offset);
+        } else
+        {
+            printf("(??)");
+        }
+
+    }
+    printf("\n");
+    #else
+    LOGE("No trace available. Recompile with execinfo.h or libunwind.h.");
+
+    return;
+    #endif
 }
 
 /* ------------------- Impl of debugging functions ---------------------------*/
